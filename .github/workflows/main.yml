name: Tracks Every Minecraft Skript which exists on github

on:
  schedule:
    - cron: '0 0 * * *' # Runs daily
  workflow_dispatch: # Allows manual triggering

jobs:
  fetch-and-update-readme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Fetch All `.sk` Files from GitHub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Fetching Skript files..."

          # Initialize an empty array for storing all the results
          all_files=""

          # Initialize page number and set maximum results per page
          page=1
          per_page=100
          
          # Fetch all pages of results
          while : ; do
            # Fetch the page of results
            response=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
              "https://api.github.com/search/code?q=extension:sk&per_page=$per_page&page=$page")
            
            # Check if there are no results
            if [[ $(echo "$response" | jq -r '.items | length') -eq 0 ]]; then
              break
            fi

            # Filter and append the current page results to the all_files variable
            current_files=$(echo "$response" | jq -r '.items[] | select(.name | endswith(".sk")) | "* [\(.name)](\(.html_url)) in [\(.repository.full_name)](\(.repository.html_url))"')
            all_files="$all_files\n$current_files"

            # Increment the page number
            page=$((page + 1))
          done

          # Save the results to a text file
          echo "$all_files" > results.txt

      - name: Update README.md
        run: |
          echo "# Skript Files Collection" > README.md
          echo "" >> README.md
          echo "This list is automatically updated daily with public \`.sk\` files found on GitHub." >> README.md
          echo "" >> README.md
          echo "## Skript Files:" >> README.md
          echo "" >> README.md
          cat results.txt >> README.md
          echo "" >> README.md
          echo "Last Updated: $(date)" >> README.md

      - name: Commit Changes
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          if [ -n "$(git status --porcelain)" ]; then
            git add README.md
            git commit -m "Update README with latest Skript files"
            git push
          else
            echo "No changes to commit"
          fi
