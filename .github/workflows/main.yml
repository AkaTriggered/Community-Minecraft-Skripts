name: Track .sk Files on GitHub

on:
  schedule:
    - cron: '0 0 * * *'  # Runs every day at midnight
  workflow_dispatch: # Allows manual triggering

jobs:
  fetch-and-update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Fetch .sk Files from GitHub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Fetching .sk files from GitHub..."
          curl -H "Authorization: token $GITHUB_TOKEN" \
               "https://api.github.com/search/code?q=extension:sk&per_page=100&page=1" \
               > results_page_1.json
          # Handle pagination if there are more than 100 results
          curl -H "Authorization: token $GITHUB_TOKEN" \
               "https://api.github.com/search/code?q=extension:sk&per_page=100&page=2" \
               > results_page_2.json
          # Add more pages as needed based on the search results

      - name: Update README.md
        run: |
          echo "# GitHub Skript Files Tracker" > README.md
          echo "" >> README.md
          echo "This is an automatically generated list of .sk files found on GitHub." >> README.md
          echo "" >> README.md
          echo "## Skript Files:" >> README.md
          echo "" >> README.md
          
          cat results_page_1.json | jq -r '.items[] | "* [\(.name)](\(.html_url)) in [\(.repository.full_name)](\(.repository.html_url))"' >> README.md
          cat results_page_2.json | jq -r '.items[] | "* [\(.name)](\(.html_url)) in [\(.repository.full_name)](\(.repository.html_url))"' >> README.md
          
          echo "" >> README.md
          echo "Last Updated: $(date)" >> README.md

      - name: Commit Changes
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          if [ -n "$(git status --porcelain)" ]; then
            git add README.md
            git commit -m "Update README with latest .sk files from GitHub"
            git push
          else
            echo "No changes to commit"
          fi
